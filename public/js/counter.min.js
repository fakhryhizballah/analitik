function generateUniqueId() { return "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g, function (t) { let n = 16 * Math.random() | 0; return ("x" === t ? n : 3 & n | 8).toString(16) }) } function getVisitorId() { let t = "visitor_id_session", n = localStorage.getItem(t); return n || (n = generateUniqueId(), localStorage.setItem(t, n)), n } const currentVisitorId = getVisitorId(); let getHostname = new URL(window.location); async function sha256(t) { let n = await crypto.subtle.digest("SHA-256", new TextEncoder().encode(t)); return Array.from(new Uint8Array(n)).map(t => t.toString(16).padStart(2, "0")).join("") } async function trackVisitor(t, n) { fetch("https://count.spairum.my.id/api/track/unique", { method: "POST", headers: { "Content-Type": "application/json" }, body: JSON.stringify({ host: t, visitorId: n }) }) } async function trak(t) { let n = await sha256(t), e = document.cookie.split(";").some(t => t.trim().startsWith(`${n}=`)); e || (trackVisitor(t, currentVisitorId), document.cookie = `${n}=${currentVisitorId}; path=/; max-age=86400;`) } function getTrackUnique(t) { return fetch("https://count.spairum.my.id/api/analytics/unique/" + t, {}).then(t => t.json()) } function getTrackbyDate(t, n) { return fetch("https://count.spairum.my.id/api/analytics/track/" + t + "/" + n, {}).then(t => t.json()) } console.log("Session Visitor ID:", currentVisitorId), trak(getHostname.hostname), trak(getHostname.hostname + getHostname.pathname);